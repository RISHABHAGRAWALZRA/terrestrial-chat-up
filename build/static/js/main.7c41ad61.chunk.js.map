{"version":3,"sources":["components/Chat/Chat.js","components/Chat/Messagelist/Message.js","components/Chat/Messagelist/MessageList.js","components/Chat/SendMessageForm/SendMessageForm.js","components/Chat/RoomList/RoomList.js","components/Chat/NewRomForm/NewRoomForm.js","components/Login/Login.js","components/Register/Register.js","App.js","index.js"],"names":["socket","Message","state","isSentByCurrentUser","username","store","get","name","console","log","this","props","user","setState","className","ReactEmoji","emojify","text","React","Component","MessageList","node","ReactDOM","findDOMNode","shouldScrollBottom","scrollTop","clientHeight","scrollHeight","currentRoomId","messages","map","message","index","key","SendMessageForm","showEmojis","e","document","addEventListener","closeMenu","emojiPicker","contains","target","removeEventListener","addEmoji","sym","unified","split","codesArray","forEach","el","push","emoji","String","fromCodePoint","handleChange","bind","handleSubmit","value","preventDefault","sendMessage","onSubmit","style","styles","ref","onSelect","emojiTooltip","title","getEmojiButton","onClick","placeholder","type","onChange","disabled","cssFloat","border","cursor","position","bottom","right","marginLeft","RoomList","orderedRooms","rooms","sort","a","b","id","logout","room","i","active","notify","subscribeToRoom","NewRoomForm","roomName","required","Chat","joinedRooms","currentMessages","loggedIn","handleLogout","io","email","axios","then","res","data","joinedrooms","roomId","element","result","find","obj","_id","valueOf","Username","emit","error","alert","on","callback","off","remove","emailId","post","success","joinRoom","to","SignInForm","password","history","info","set","SignUpForm","App","path","exact","component","Login","Register","render","getElementById"],"mappings":"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","file":"static/js/main.7c41ad61.chunk.js","sourcesContent":["import React from 'react'\nimport MessageList from './Messagelist/MessageList'\nimport SendMessageForm from './SendMessageForm/SendMessageForm'\nimport RoomList from './RoomList/RoomList'\nimport NewRoomForm from './NewRomForm/NewRoomForm'\n\n\nimport './chat.css';\n\n\nimport io from \"socket.io-client\";\n\nimport { Redirect } from \"react-router-dom\";\n\nimport store from 'store';\nimport axios from 'axios';\n\nlet socket;\nconst ENDPOINT = 'http://localhost:5000';\n\nclass Chat extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      currentRoomId: null,\n      joinedRooms: [],\n      messages: [],\n      currentMessages: [],\n      loggedIn : true\n    }\n    this.subscribeToRoom = this.subscribeToRoom.bind(this)\n    this.sendMessage = this.sendMessage.bind(this)\n    this.subscribeToRoom = this.subscribeToRoom.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n\n  componentDidMount() {\n\n    //Connection b/w server-socket and client-socket\n    socket = io(ENDPOINT);\n    //console.log(socket);\n\n    \n\n    const email = store.get('state').email\n    console.log(email);\n    axios.get('http://localhost:5000/api/v1/chatup/join/' + email)\n      .then(res => {\n        console.log(res.data.rooms);\n        console.log(res.data.joinedrooms);\n\n        const rooms = res.data.rooms;\n        const joinedrooms = res.data.joinedrooms;\n\n        let roomId;\n\n        joinedrooms.forEach(element => {\n          var result = rooms.find(obj => {\n            return obj.name === element;\n          })\n\n          roomId = result._id.valueOf();\n\n          let roomName = result.name;\n\n          this.setState({\n            joinedRooms: [...this.state.joinedRooms, {\n              \"id\": roomId,\n              \"name\": roomName,\n              \"notify\" : 0\n            }],\n            currentRoomId : roomId\n          })\n\n          this.setState({\n            messages: [...this.state.messages, {\n              \"roomId\": roomId,\n              \"message\": []\n            }]\n          })\n\n          const Username = store.get('state').name;\n          \n          socket.emit('join', { Username, roomId }, (error) => {\n            if (error) {\n              alert(error);\n            }\n          });\n\n        });\n        this.subscribeToRoom(roomId)\n      })\n\n    socket.on('message', (data, callback) => {\n      const { user, text, roomId } = data;\n\n      if (roomId === this.state.currentRoomId) {\n        this.setState({\n          currentMessages: [...this.state.currentMessages, { \"user\": user, \"text\": text }]\n        })\n      } else {\n        this.state.joinedRooms.forEach(element => {\n          if(element.id === roomId){\n            element.notify++;\n            console.log(`${roomId} and ${element.notify}`)\n          }\n        });\n        this.state.messages.forEach(element => {\n          if (element.roomId === roomId) {\n            element.message = [...element.message, { \"user\" : user, \"text\": text }];\n          }\n        });\n      }\n\n      //console.log(`${text} by ${user} get from server`);\n    })\n  }\n\n\n  componentWillUnmount() {\n\n    //Disconnect with server\n    socket.emit('disconnect');\n    socket.off();\n\n  }\n\n\n\n  sendMessage(text) {\n\n    if (text) {\n      const data = {\n        message: text,\n        user: store.get('state').name,\n        roomId: this.state.currentRoomId\n\n      }\n      socket.emit('sendMessage', data);\n\n      //console.log(`${text} sent to server`)\n\n      /*\n      this.setState({\n        currentMessages: [...this.state.currentMessages, { \"user\": data.user, \"text\": text }]\n      })\n      */\n    }\n\n  }\n\n  handleLogout(){\n    store.remove('loggedIn');\n    this.setState({\n      loggedIn : false\n    })\n  }\n\n\n\n  joinRoom(roomName) {\n\n    const room = {\n      name: roomName,\n      emailId: store.get('state').email\n    }\n\n    axios.post(`http://localhost:5000/api/v1/chatup/join/joinroom`, room)\n      .then(res => {\n        //console.log(res.data);\n\n        if (res.data.success === true) {\n\n\n          const Username = store.get('state').name;\n          const roomId = res.data.id;\n\n          socket.emit('join', { Username, roomId }, (error) => {\n            if (error) {\n              alert(error);\n            }\n          });\n\n\n          const id = res.data.id;\n\n          this.setState({\n            messages: [...this.state.messages, {\n              \"roomId\": id,\n              \"message\": []\n            }]\n          })\n\n\n          this.setState({\n            joinedRooms: [...this.state.joinedRooms, {\n              \"id\": id,\n              \"name\": roomName,\n              \"notify\" : 0\n            }]\n          })\n\n\n          this.subscribeToRoom(id);\n          //console.log(this.state);\n        }\n        else {\n          console.log(res);\n          console.log('Error');\n        }\n      })\n\n    //const res = await axios.post('http://localhost:5000/api/v1/chatup/chat/joinroom', room)\n\n\n  }\n\n  subscribeToRoom(roomId) {\n\n    this.state.messages.forEach(element => {\n      if (element.roomId === this.state.currentRoomId) {\n        \n        element.message = [...this.state.currentMessages];\n      \n      }\n\n    });\n\n    this.state.joinedRooms.forEach(element => {\n      if(roomId === element.id){\n        element.notify = 0;\n      }\n    });\n\n    this.state.messages.forEach(element => {\n      if (element.roomId === roomId) {\n        this.setState({\n\n          currentMessages: [...element.message],\n          currentRoomId: roomId\n\n        })\n      }\n    });\n\n  }\n\n  render() {\n  \n    if (!store.get('loggedIn') || !this.state.loggedIn) {\n      return (<Redirect to='/' />)\n    }\n\n    //store.remove('loggedIn');\n\n    return (\n      <div className=\"chat\">\n        <RoomList\n          logout={this.handleLogout}\n          rooms={[...this.state.joinedRooms]}\n          subscribeToRoom={this.subscribeToRoom}\n          currentRoomId={this.state.currentRoomId} />\n        <MessageList\n          currentRoomId={this.state.currentRoomId}\n          messages={this.state.currentMessages} />\n        <NewRoomForm onSubmit={this.joinRoom.bind(this)} />\n        <SendMessageForm\n          sendMessage={this.sendMessage}\n          disabled={!this.state.currentRoomId} />\n      </div>\n    );\n  }\n}\n\nexport default Chat","import React from 'react'\n\nimport store from 'store';\n\nimport ReactEmoji from 'react-emoji';\n\nclass Message extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            isSentByCurrentUser : false\n        }\n    }\n\n    componentDidMount() {\n        const username = store.get('state').name;\n\n        console.log(`${this.props.user} ===  ${username}`)\n\n        if (this.props.user === username ) {\n            \n            this.setState({\n                isSentByCurrentUser : true\n            })\n        }\n    }\n\n\n    componentWillReceiveProps(){\n        const username = store.get('state').name;\n\n        console.log(`${this.props.user} ===  ${username}`)\n\n        if (this.props.user === username ) {\n            \n            this.setState({\n                isSentByCurrentUser : true\n            })\n        }\n    }\n\n    componentWillUnmount(){\n        this.setState({\n            isSentByCurrentUser : false\n        })\n    }\n\n    render() {\n\n        return (\n            this.state.isSentByCurrentUser\n                ? (\n                    <div className=\" messageContainer justifyEnd\">\n                        <p className=\"message-username sentText pr-10\">{this.props.user}</p>\n                        <div className=\"messageBox backgroundBlue\">\n                            <p className=\"messageText colorWhite\">{ReactEmoji.emojify(this.props.text)}</p>\n                        </div>\n                    </div>\n                )\n                : (\n                    <div className=\" messageContainer justifyStart\">\n                        <div className=\"messageBox backgroundLight\">\n                            <p className=\"messageText colorDark\">{ReactEmoji.emojify(this.props.text)}</p>\n                        </div>\n                        <p className=\"message-username sentText pl-10 \">{this.props.user}</p>\n                    </div>\n                )\n\n        )\n    }\n}\n\nexport default Message","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Message from './Message'\n\nimport './messages.css'\n\nclass MessageList extends React.Component {\n    componentWillUpdate() {\n        const node = ReactDOM.findDOMNode(this);\n        this.shouldScrollBottom = node.scrollTop + node.clientHeight + 50 >= node.scrollHeight;\n    }\n\n    componentDidUpdate() {\n        if (this.shouldScrollBottom) {\n            const node = ReactDOM.findDOMNode(this);\n            node.scrollTop = node.scrollHeight\n        }\n    }\n        \n    render() {\n        if (!this.props.currentRoomId) {\n            return ( \n                <div className=\"message-list\">\n                    <div className=\"join-room\">\n                        &larr; Enter in a room!\n                    </div>\n                </div>\n            )\n        } \n        return (\n            <div className=\"message-list\">\n                {this.props.messages.map((message, index) => {\n                    return <Message key={message.user + message.text} user={message.user} text={message.text} /> \n                })}\n            </div>\n        )\n    }\n}\n\nexport default MessageList","import React from 'react'\n\nimport Send from '@material-ui/icons/Send';\n\nimport 'emoji-mart/css/emoji-mart.css'\nimport { Picker } from 'emoji-mart'\n\nimport './sendmessageform.css'\n\nclass SendMessageForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            message: '',\n            showEmojis: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            message: e.target.value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.sendMessage(this.state.message);\n        this.setState({\n            message: ''\n        })\n    }\n\n    showEmojis = e => {\n        this.setState(\n            {\n                showEmojis: true\n            },\n            () => document.addEventListener(\"click\", this.closeMenu)\n        );\n    };\n\n    closeMenu = e => {\n        console.log(this.emojiPicker);\n        if (this.emojiPicker !== null && !this.emojiPicker.contains(e.target)) {\n            this.setState(\n                {\n                    showEmojis: false\n                },\n                () => document.removeEventListener(\"click\", this.closeMenu)\n            );\n        }\n    };\n\n    addEmoji = e => {\n        let sym = e.unified.split('-')\n        let codesArray = []\n        sym.forEach(el => codesArray.push('0x' + el))\n        let emoji = String.fromCodePoint(...codesArray)\n        this.setState({\n            message: this.state.message + emoji\n        })\n    }\n\n    render() {\n        return (\n\n            <form className=\"send-message-form\" onSubmit={this.handleSubmit}>\n                {this.state.showEmojis ? (\n                    <span style={styles.emojiPicker} ref={el => (this.emojiPicker = el)}>\n                        <Picker\n                            onSelect={this.addEmoji}\n                            emojiTooltip={true}\n                            title=\"weChat\"\n                        />\n                    </span>\n                ) : (\n                        <p style={styles.getEmojiButton} onClick={this.showEmojis}>\n                            {String.fromCodePoint(0x1f60a)}\n                        </p>\n                    )}\n\n                <input\n                    placeholder=\"Type message and hit ENTER\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={this.state.message}\n                    disabled={this.props.disabled} />\n                <Send onClick={this.handleSubmit} className=\"sendBtn\"></Send>\n\n            </form>\n\n        )\n    }\n}\n\nexport default SendMessageForm\n\n\nconst styles = {\n    getEmojiButton: {\n        cssFloat: \"right\",\n        border: \"none\",\n        cursor: \"pointer\",\n    },\n    emojiPicker: {\n        position: \"absolute\",\n        bottom: 10,\n        right: 0,\n        cssFloat: \"right\",\n        marginLeft: \"200px\"\n    }\n};\n\n/*\nconst customEmojis = [\n    {\n        name: \"Octocat\",\n        short_names: [\"octocat\"],\n        text: \"\",\n        emoticons: [],\n        keywords: [\"github\"],\n        imageUrl: \"https://assets-cdn.github.com/images/icons/emoji/octocat.png?v7\"\n    }\n];\n*/","import React from 'react'\n\nimport ExitToApp from '@material-ui/icons/ExitToApp';\n\nimport './roomlist.css'\n\nclass RoomList extends React.Component {\n\n    render() {\n        const orderedRooms = [...this.props.rooms].sort((a, b) => a.id > b.id);\n        return (\n            <div className=\"rooms-list\">\n                <div className=\"logout\">\n                    <ExitToApp onClick={this.props.logout} className=\"logout-btn\">Logout</ExitToApp>\n                    <h4 className=\"logout-txt\">Logout</h4>\n                </div>\n                <h3>Your rooms:</h3>\n                <ul>\n                    {orderedRooms.map((room, i) => {\n                        const active = this.props.currentRoomId === room.id ? 'active' : '';\n                        return (\n                            <li key={room.notify+room.name} className={'room ' + active}>\n                                <a onClick={() => this.props.subscribeToRoom(room.id)}>\n                                    # {room.name}\n                                </a>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div >\n        )\n    }\n}\n\nexport default RoomList","import React from 'react'\n\nimport './newroomform.css'\n\nclass NewRoomForm extends React.Component {\n    constructor () {\n        super()\n        this.state= {\n            roomName: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            roomName: e.target.value\n        })\n    }\n\n    handleSubmit (e) {\n        e.preventDefault()\n        this.props.onSubmit(this.state.roomName)\n        this.setState({\n            roomName: ''\n        })\n        \n    }\n\n    render () {\n        return (\n            <div className=\"new-room-form\">\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\" \n                        placeholder=\"Join a room\" \n                        value={this.state.roomName} \n                        onChange={this.handleChange}\n                        required />\n                    <button id=\"create-room-btn\" type=\"submit\">+</button>\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default NewRoomForm","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport store from 'store';\n\nimport './login.css'\n\n\nclass SignInForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name : '',\n            email: '',\n            password: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(e) {\n        let res;\n\n        e.preventDefault();\n        \n        const { history } = this.props;\n\n        console.log('On submit pressed');\n\n        axios.post('http://localhost:5000/api/v1/chatup/auth/login',this.state)\n            .then((info) => {\n                console.log(info);\n                res = info.data;\n                if (res.success === true) {\n                    console.log(\"Hello\");\n                    this.setState({\n                        name : res.user.name\n                    })\n                    store.set('loggedIn', true);\n                    store.set('state',this.state);\n                    history.push('/chat');\n                }\n            })\n\n    }\n\n    render() {\n        return (\n            <div className=\"FormCenter\">\n                <form onSubmit={this.handleSubmit} className=\"FormFields box\">\n                    <h1>Login</h1>\n                    <div className=\"FormField\">\n                        <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"FormField\">\n                        <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"FormField\">\n                        <button className=\"FormField__Button mr-20\">Sign In</button>\n                        <Link to={`/register`} >\n                            <h6>Register</h6>\n                        </Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SignInForm;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport store from 'store'\n\nimport axios from 'axios';\n\nimport './register.css'\n\n\nclass SignUpForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            email: '',\n            password: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        // get form data out of state\n        //const { name, password, email } = this.state;\n\n        const {history} = this.props;\n\n        console.log('On submit pressed');\n\n        /*\n        fetch('http://localhost:5000/api/v1/chatup/auth/register', {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(this.state)\n        })\n        */\n        axios.post('http://localhost:5000/api/v1/chatup/auth/register',this.state)\n            .then((info) => { \n                console.log(info);\n                if (info.data.success === true) {\n                    console.log(\"Hello\");\n                    store.set('loggedIn', true);\n                    store.set('state',this.state);\n                    history.push('/chat');\n                }\n             })\n\n    }\n\n    render() {\n        return (\n            <div className=\"FormCenter\">\n                <form onSubmit={this.handleSubmit} className=\"FormFields box\">\n                    <h1>Register</h1>\n                    <div className=\"FormField\">\n                        <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"FormField\">\n                        <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"FormField\">\n                        <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"FormField\">\n                        <button className=\"FormField__Button mr-20\">Sign Up</button>\n                        <Link to={`/`} >\n                            <h6>Login</h6>\n                        </Link>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SignUpForm;","import React from 'react';\n\nimport Chat from './components/Chat/Chat';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\n\nimport './App.css'\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/chat\" component={Chat} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}